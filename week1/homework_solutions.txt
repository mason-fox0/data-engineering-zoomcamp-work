Question 1: 

Run docker with the python:3.12.8 image in an interactive mode, use the entrypoint bash.

What's the version of pip in the image?

    24.3.1
    24.2.1
    23.3.1
    23.2.1

Solution:

sudo docker pull python:3.12.8
docker run -it python:3.12.8 bash
pip --version

pip 24.3.1 from /usr/local/lib/python3.12/site-packages/pip (python 3.12)

Question 2:

Given the following docker-compose.yaml, what is the hostname and port that pgadmin should use to connect to the postgres database?

#####
services:
  db:
    container_name: postgres
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'ny_taxi'
    ports:
      - '5433:5432'
    volumes:
      - vol-pgdata:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: "pgadmin@pgadmin.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadmin"
    ports:
      - "8080:80"
    volumes:
      - vol-pgadmin_data:/var/lib/pgadmin

volumes:
  vol-pgdata:
    name: vol-pgdata
  vol-pgadmin_data:
    name: vol-pgadmin_data
#######


A. postgres:5433
B. localhost:5432
C. db:5433
D. postgres:5432
E. db:5432

Solution:

E. Connection port for postgres (internal) is 5432. Under services, hostname is db.


Questions 3-6:
Run Postgres and load data as shown in the videos. We'll use the green taxi trips from October 2019.

Question 3:
During the period of October 1st 2019 (inclusive) and November 1st 2019 (exclusive), how many trips, respectively, happened:

    Up to 1 mile
    In between 1 (exclusive) and 3 miles (inclusive),
    In between 3 (exclusive) and 7 miles (inclusive),
    In between 7 (exclusive) and 10 miles (inclusive),
    Over 10 miles

Options:

A.    104,802; 197,670; 110,612; 27,831; 35,281
B.    104,802; 198,924; 109,603; 27,678; 35,189
C.    104,793; 201,407; 110,612; 27,831; 35,281
D.    104,793; 202,661; 109,603; 27,678; 35,189
E.    104,838; 199,013; 109,645; 27,688; 35,202

Solution:
Up to 1 mile:

SELECT count(*)
FROM public."Rides"
WHERE trip_distance <= 1.0

Result: 104838

1 to 3 miles
SELECT count(*)
FROM public."Rides"
WHERE trip_distance > 1.0 AND trip_distance <= 3.0

Result: 199013

3 to 7 miles

same logic
Result: 109645

7 to 10 miles

same logic
Result: 27688

>10 miles
Result: 35202

Answer: E

Question 4:
Of these, which pickup day had the longest trip distance?

A.    2019-10-11
B.    2019-10-24
C.    2019-10-26
D.    2019-10-31

Solution:

SELECT lpep_pickup_datetime, trip_distance
FROM public."Rides"
ORDER BY trip_distance DESC
LIMIT 30;

The longest ride is one of our days of interest, so we can avoid a more complex query.
D. 2019-10-31, with 515.89 miles. (Is this a data quality issue??)

Question 5:
Which were the top pickup locations with over 13,000 in total_amount (across all trips) for 2019-10-18?

Consider only lpep_pickup_datetime when filtering by date.

A.    East Harlem North, East Harlem South, Morningside Heights
B.    East Harlem North, Morningside Heights
C.    Morningside Heights, Astoria Park, East Harlem South
D.    Bedford, East Harlem North, Astoria Park

Solution:

SELECT z."Zone", sum(r.total_amount) as total
FROM public."Rides" as r
	 JOIN zones as z
	 ON r."PULocationID" = z."LocationID"
WHERE DATE(r.lpep_pickup_datetime) = '2019-10-18' 
GROUP BY z."Zone"
HAVING sum(r.total_amount) > 13000
ORDER BY sum(r.total_amount) DESC
limit 10;

Result: East Harlem North:   18686.68
        East Harlem South:   16797.26
        Morningside Heights: 13029.79

Answer: A.

Question 6:
For the passengers picked up in October 2019 in the zone name "East Harlem North" which was the drop off zone that had the largest tip?

Note: it's tip , not trip

We need the name of the zone, not the ID.

A.    Yorkville West
B.    JFK Airport
C.    East Harlem North
D.    East Harlem South

Solution:
SELECT zdo."Zone", tip_amount
FROM public."Rides" as r
	 JOIN zones as zpu
	 ON r."PULocationID" = zpu."LocationID"
	 JOIN zones as zdo
	 ON r."DOLocationID" = zdo."LocationID"
WHERE zpu."Zone" = 'East Harlem North'
ORDER BY tip_amount DESC
limit 10;

Answer: B

Question 7:
Which of the following sequences, respectively, describes the workflow for:

    Downloading the provider plugins and setting up backend,
    Generating proposed changes and auto-executing the plan
    Remove all resources managed by terraform`

Options:

A.    terraform import, terraform apply -y, terraform destroy
B.    teraform init, terraform plan -auto-apply, terraform rm
C.    terraform init, terraform run -auto-approve, terraform destroy
D.    terraform init, terraform apply -auto-approve, terraform destroy
E.    terraform import, terraform apply -y, terraform rm

Solution:
init is the proper command for setup. Apply is the proper command to execute (vs. just showing potential changes) Destroy is the proper removal command.
